// 
// Molecular graphics export from VMD 1.9.4a43
// http://www.ks.uiuc.edu/Research/vmd/
// Requires POV-Ray 3.5 or later
// 
// POV 3.x input script : cis_trans 
// try povray +W1024 +H1024 -Icis_trans -Ocis_trans.tga +P +X +A +FT +C
#if (version < 3.5) 
#error "VMD POV3DisplayDevice has been compiled for POV-Ray 3.5 or above.\nPlease upgrade POV-Ray or recompile VMD."
#end 
#declare VMD_clip_on=array[3] {0, 0, 0};
#declare VMD_clip=array[3];
#declare VMD_scaledclip=array[3];
#declare VMD_line_width=0.0020;
#macro VMDC ( C1 )
  texture { pigment { rgbt C1 }}
#end
#macro VMD_point (P1, R1, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_line (P1, P2, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_sphere (P1, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cylinder (P1, P2, R1, C1, O1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cone (P1, P2, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_triangle (P1, P2, P3, N1, N2, N3, C1)
  #local T = texture { pigment { C1 } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
#macro VMD_tricolor (P1, P2, P3, N1, N2, N3, C1, C2, C3)
  #local NX = P2-P1;
  #local NY = P3-P1;
  #local NZ = vcross(NX, NY);
  #local T = texture { pigment {
    average pigment_map {
      [1 gradient x color_map {[0 rgb 0] [1 C2*3]}]
      [1 gradient y color_map {[0 rgb 0] [1 C3*3]}]
      [1 gradient z color_map {[0 rgb 0] [1 C1*3]}]
    }
    matrix <1.01,0,1,0,1.01,1,0,0,1,-.002,-.002,-1>
    matrix <NX.x,NX.y,NX.z,NY.x,NY.y,NY.z,NZ.x,NZ.y,NZ.z,P1.x,P1.y,P1.z>
  } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
camera {
  orthographic
  location <0.0000, 0.0000, -2.0000>
  look_at <-0.0000, -0.0000, 2.0000>
  up <0.0000, 3.0000, 0.0000>
  right <3.0000, 0.0000, 0.0000>
}
light_source { 
  <-0.1000, 0.1000, -1.0000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
light_source { 
  <1.0000, 2.0000, -0.5000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
background {
  color rgb<0.000, 0.000, 0.000>
}
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#default { texture {
 finish { ambient 0.220 diffuse 0.760 phong 0.1 phong_size 58.884 specular 0.220 }
} }
#declare VMD_line_width=0.0020;
VMD_triangle(<0.59743118,0.31232834,1.3557892>,<1.1973183,-0.0028576851,-0.44668913>,<0.044145346,-1.2444329,0.41025639>,<0.79445279,-0.49558038,0.35106251>,<0.79445279,-0.49558038,0.35106251>,<0.79445279,-0.49558038,0.35106251>,rgbt<0.000,0.000,1.000,0.780>)
VMD_triangle(<-1.2179003,0.03699851,0.77685785>,<-0.57457566,-0.27881098,-0.98766172>,<0.044145346,-1.2444329,0.41025639>,<0.72533429,0.67317462,0.14396571>,<0.72533429,0.67317462,0.14396571>,<0.72533429,0.67317462,0.14396571>,rgbt<0.000,0.000,1.000,0.780>)
VMD_triangle(<0.59743118,0.31232834,1.3557892>,<-1.2179003,0.03699851,0.77685785>,<-0.18811369,1.3286896,-0.10051727>,<-0.31256574,0.69153035,0.65122062>,<-0.31256574,0.69153035,0.65122062>,<-0.31256574,0.69153035,0.65122062>,rgbt<0.000,0.000,1.000,0.780>)
VMD_triangle(<1.1973183,-0.0028576851,-0.44668913>,<-0.57457566,-0.27881098,-0.98766172>,<-0.18811369,1.3286896,-0.10051727>,<-0.19994794,-0.43614084,0.87738353>,<-0.19994794,-0.43614084,0.87738353>,<-0.19994794,-0.43614084,0.87738353>,rgbt<0.000,0.000,1.000,0.780>)
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#default { texture {
 finish { ambient 0.000 diffuse 0.850 phong 0.1 phong_size 38.905 specular 0.000 }
} }
// MoleculeID: 0 ReprID: 0 Beginning VDW
VMD_sphere(<-0.1881,1.3287,-0.1005>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
VMD_sphere(<-1.2179,0.0370,0.7769>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
VMD_sphere(<0.5974,0.3123,1.3558>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
VMD_sphere(<0.0441,-1.2444,0.4103>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
VMD_sphere(<1.1973,-0.0029,-0.4467>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
VMD_sphere(<-0.5746,-0.2788,-0.9877>,0.1506,rgbt<1.000,0.600,0.600,0.000>)
// MoleculeID: 0 ReprID: 1 Beginning CPK
// MoleculeID: 0 ReprID: 1 Beginning VDW
VMD_sphere(<-0.5735,0.3134,-0.0524>,0.0430,rgbt<1.000,1.000,0.000,0.000>)
VMD_sphere(<0.3166,0.1328,-0.0162>,0.0430,rgbt<1.000,0.000,0.000,0.000>)
VMD_sphere(<0.4563,-0.5338,-0.1805>,0.0430,rgbt<1.000,0.000,0.000,0.000>)
VMD_sphere(<-0.3493,-0.0740,-0.0616>,0.0430,rgbt<1.000,0.000,0.000,0.000>)
VMD_sphere(<-0.0586,0.0604,-0.0081>,0.0430,rgbt<0.000,0.000,1.000,0.000>)
VMD_sphere(<0.0694,-0.0938,-0.0507>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.2626,-0.0517,-0.0569>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.0026,-0.2895,-0.0741>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.4026,-0.1968,-0.0985>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.3352,-0.3929,-0.1330>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.1414,-0.4277,-0.1242>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.2547,0.0660,-0.0369>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.3337,0.2677,-0.0285>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.2394,0.4293,0.0267>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.3581,0.5923,0.0590>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.5472,0.5581,0.0243>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.4728,0.1768,0.1106>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.3967,-0.6885,-0.3071>,0.0430,rgbt<0.600,0.600,0.600,0.000>)
VMD_cylinder(<-0.573452,0.31336,-0.0523643>,<-0.560336,0.435732,-0.0140445>0.0430,rgbt<1.000,1.000,0.000,0.000>,1)
VMD_cylinder(<-0.573452,0.31336,-0.0523643>,<-0.453561,0.290554,-0.0404456>0.0430,rgbt<1.000,1.000,0.000,0.000>,1)
VMD_cylinder(<0.316605,0.132809,-0.0161514>,<0.289623,0.0405431,-0.0365114>0.0430,rgbt<1.000,0.000,0.000,0.000>,1)
VMD_cylinder(<0.316605,0.132809,-0.0161514>,<0.39469,0.154826,0.0472171>0.0430,rgbt<1.000,0.000,0.000,0.000>,1)
VMD_cylinder(<0.456293,-0.533776,-0.180493>,<0.395731,-0.463341,-0.156745>0.0430,rgbt<1.000,0.000,0.000,0.000>,1)
VMD_cylinder(<0.456293,-0.533776,-0.180493>,<0.426482,-0.611135,-0.243811>0.0430,rgbt<1.000,0.000,0.000,0.000>,1)
VMD_cylinder(<-0.34929,-0.0739889,-0.061646>,<-0.302018,-0.00401211,-0.0492554>0.0430,rgbt<1.000,0.000,0.000,0.000>,1)
VMD_cylinder(<-0.0585988,0.0603776,-0.00814581>,<-0.156673,0.0631714,-0.022505>0.0430,rgbt<0.000,0.000,1.000,0.000>,1)
VMD_cylinder(<-0.0585988,0.0603776,-0.00814581>,<0.00538564,-0.0167303,-0.0294394>0.0430,rgbt<0.000,0.000,1.000,0.000>,1)
VMD_cylinder(<0.0693703,-0.0938387,-0.0507336>,<0.166005,-0.0727806,-0.0538023>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.0693703,-0.0938387,-0.0507336>,<0.0360088,-0.191652,-0.0623932>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.0693703,-0.0938387,-0.0507336>,<0.00538564,-0.0167303,-0.0294394>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.262641,-0.051722,-0.0568712>,<0.166005,-0.0727806,-0.0538023>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.262641,-0.051722,-0.0568712>,<0.332598,-0.124281,-0.0776863>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.262641,-0.051722,-0.0568712>,<0.289623,0.0405431,-0.0365114>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.00264835,-0.289464,-0.0740528>,<0.0360088,-0.191652,-0.0623932>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.00264835,-0.289464,-0.0740528>,<0.0720289,-0.358559,-0.0991135>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.402555,-0.196839,-0.0985012>,<0.368861,-0.294872,-0.115749>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.402555,-0.196839,-0.0985012>,<0.332598,-0.124281,-0.0776863>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.335169,-0.392905,-0.132997>,<0.368861,-0.294872,-0.115749>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.335169,-0.392905,-0.132997>,<0.23829,-0.410279,-0.128586>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.335169,-0.392905,-0.132997>,<0.395731,-0.463341,-0.156745>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.141411,-0.427653,-0.124175>,<0.23829,-0.410279,-0.128586>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.141411,-0.427653,-0.124175>,<0.0720289,-0.358559,-0.0991135>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.254746,0.0659649,-0.0368643>,<-0.156673,0.0631714,-0.022505>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.254746,0.0659649,-0.0368643>,<-0.302018,-0.00401211,-0.0492554>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.254746,0.0659649,-0.0368643>,<-0.294208,0.166857,-0.0326955>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.33367,0.267748,-0.028527>,<-0.453561,0.290554,-0.0404456>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.33367,0.267748,-0.028527>,<-0.286527,0.348505,-0.00090003>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.33367,0.267748,-0.028527>,<-0.294208,0.166857,-0.0326955>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.239385,0.429262,0.0267265>,<-0.298739,0.510786,0.0428755>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.239385,0.429262,0.0267265>,<-0.286527,0.348505,-0.00090003>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.358093,0.592309,0.0590248>,<-0.298739,0.510786,0.0428755>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.358093,0.592309,0.0590248>,<-0.452656,0.575206,0.0416503>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.547219,0.558103,0.0242755>,<-0.560336,0.435732,-0.0140445>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.547219,0.558103,0.0242755>,<-0.452656,0.575206,0.0416503>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.472774,0.176843,0.110586>,<0.39469,0.154826,0.0472171>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.396672,-0.688491,-0.307129>,<0.426482,-0.611135,-0.243811>0.0430,rgbt<0.600,0.600,0.600,0.000>,1)
// End of POV-Ray 3.x generation 
